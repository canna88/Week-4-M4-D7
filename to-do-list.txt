- [DONE] PRIMI PASSI:
    - [DONE] creare un "arrayProva" (chatGPT) con oggetti creati in base alle indicazioni fornite
    - [DONE] inserirlo in tutti i file javascript
    - [DONE] creare 3 pagine HTML:
        - [DONE] frontpage.html
        - [DONE] pagina_prodotto.html
        - [DONE] back_office.html
    - [DONE] creare 3 pagine JAVACSRIPT:
        - [DONE] frontpage.html
        - [DONE] pagina_prodotto.html
        - [DONE] back_office.html

- HTML
    - frontpage.html
        - [DONE] togliere tutti gli effetti CSS al caricamento
        - [DONE] togliere pulsanti rimuovi
        - [DONE] togliere effetto selezionati
        - [DONE] inserire navbar e footer
        - [DONE] inserire nelle card +/- 1 prodotto
        - [DONE] aggiornare il carrello conseguentemente
        - EXTRA: ordinare
            - Ordine: prezzo pi√π alto
            - Ordine: nome
        - EXTRA: filtrare
            - Filtro: text

    - pagina_prodotto.html
        - [DONE] inserire navbar e footer
        - sistemare pagina tipo Amazon

    - [DONE] back_office.html
        - [DONE] inserire navbar e footer
        - [DONE] inserire righe prodotti
            - [DONE] pulsante: elimina
                - [DONE] si apre scelta "confermi eliminazione"
            - [DONE] pulsante: modifica
                - [DONE] si apre un form per la modifica
        - [DONE] inserire form creazione nuovo prodotto (ricordarsi prevent event default)
            - [DONE] bottone: crea nuovo prodotto
            - si apre il form a comparsa
            - [DONE] i campi devono essere obbligatori
            - [DONE] pulsante invia
            - [DONE] pulsante resetta
            - [DONE] quando si invia deve cancellare tutti i campi
            - [DONE] i campi devono essere predefiniti con il formato
            - [DONE] immagine: propone soluzioni da pexel

- CSS
    - [DONE] nascondere rimuovi rimuoviTutto (di conseguenze nel js)
    - [DONE] nascondere rimuovi totale e valore prodotti (di conseguenze nel js)
    - animazione comprato
        - acquisto
        - rimuovo tutto
    - animazione caricamento card
    - animazione carrello compari/scompari

    - sui modali UPDATE e ADD, al click dei pulsanti 
        non si deve chiudere se tutti 
        i campi non sono stati compilati


- [DONE] JAVASCRIPT
    - [DONE] API
        -[DONE] creare account (IMPORTANTE: viene fornita vuota)
        - [DONE] ottenere il codice di autorizzazione

    - [DONE] CODICE PURO
        - frontpage.html
            - [DONE] controllare codice javascript precedentemente elaborato
            - [DONE] modificare con l'aggiunta del numero prodotti
        - pagina_prodotto.html
            - [DONE] controllare codice javascript precedentemente elaborato
            - [DONE] trasferire i dati tramite il codice alla pagina prodotto
        - back_office.html
            - [DONE] creare metodo POST
            - [DONE] creare metodo per UPDATE
            - [DONE] creare metodo per REMOVE
            - EXTRA: scheda dettagli


- ULTIMI DETTAGLI
    - inserire i prodotti
    - SPINNERS e LOADERS
    - sistemare le card della home-page
    - controllare tutte le funzioni di fetch
    - controllare che il carrello venga spostato da una parte all'altra
    - [DONE] sistemare il contenuto dei modali
    - controllare refresh cart su script e script_dettagli_prodotto
    - immagine dettagli_prodotto html
    - cancellare tutti i console.log


ARRAY PROVA

const arrayElementi = [
  {
    "_id": "sdgergr",
    "name": "3310 cellphone",
    "description": "An unforgettable icon.",
    "brand": "Nokia",
    "imageUrl": "https://bit.ly/3ceXjRa",
    "price": 100,
    "userId": "admin",
    "createdAt": "2021-09-19T09:32:10.535Z",
    "updatedAt": "2021-09-19T09:32:10.535Z",
    "__v": 0
  },
  {
    "_id": "2dfeh3s",
    "name": "Smartphone X",
    "description": "The latest and greatest.",
    "brand": "Samsung",
    "imageUrl": "https://bit.ly/3cAweFJ",
    "price": 800,
    "userId": "user123",
    "createdAt": "2021-09-20T15:45:22.123Z",
    "updatedAt": "2021-09-20T15:45:22.123Z",
    "__v": 0
  },
  {
    "_id": "f34g5dh",
    "name": "E-Book Reader",
    "description": "Read your favorite books digitally.",
    "brand": "Amazon",
    "imageUrl": "https://bit.ly/3nR2YK9",
    "price": 150,
    "userId": "user456",
    "createdAt": "2021-09-21T12:18:05.789Z",
    "updatedAt": "2021-09-21T12:18:05.789Z",
    "__v": 0
  },
  {
    "_id": "gsd8h7f",
    "name": "Wireless Headphones",
    "description": "Enjoy music without the cords.",
    "brand": "Sony",
    "imageUrl": "https://bit.ly/3AlnhtP",
    "price": 120,
    "userId": "user789",
    "createdAt": "2021-09-22T08:57:30.222Z",
    "updatedAt": "2021-09-22T08:57:30.222Z",
    "__v": 0
  },
  {
    "_id": "p3j8sd9",
    "name": "Gaming Console",
    "description": "Experience the latest games.",
    "brand": "Microsoft",
    "imageUrl": "https://bit.ly/3yTrJuj",
    "price": 400,
    "userId": "user1011",
    "createdAt": "2021-09-23T17:29:15.654Z",
    "updatedAt": "2021-09-23T17:29:15.654Z",
    "__v": 0
  }
];


eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTFmMTQxOWM3Mjg4NzAwMTg4N2ZmMWIiLCJpYXQiOjE2OTY1MzU1NzcsImV4cCI6MTY5Nzc0NTE3N30.7UuxGWrA8TVoFpfvg1a-mX0FXSBmdigPkRW-UNqC6h8

You can use it in your request setting the headers in this way:

fetch("https://striveschool-api.herokuapp.com/api/put-your-endpoint-here/", {
headers: {
"Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTM3ZmIwYTc3Y2RhYTAwMTQ2ZGYzODMiLCJpYXQiOjE2OTgxNjc1NjIsImV4cCI6MTY5OTM3NzE2Mn0.c1a_v_-jtk5AO1RmpBerwNPt3UTg6A3Zvyvkhe_-Rm8"
}
})